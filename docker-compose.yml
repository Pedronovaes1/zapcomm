version: '3.8'
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: seu_user
      POSTGRES_PASSWORD: sua_senha
      POSTGRES_DB: db_name
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - zapcomm-network
    deploy:
      resources:
        limits:
          memory: 1G

  redis:
    image: redis:6
    ports:
      - "6380:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes 
    networks:
      - zapcomm-network
    deploy:
      resources:
        limits:
          memory: 512M

  backend:
    build:
      context: ./backend
    ports:
      - "8080:8080"
    environment:
      - ./backend/.env
    depends_on:
      - db
      - redis
    networks:
      - zapcomm-network
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
    command: >
      sh -c "
      npm run dev:server
      "
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_HOURS_CLOSE_TICKETS_AUTO=24
      - NODE_OPTIONS=--openssl-legacy-provider
    volumes:
      - ./frontend:/app
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - zapcomm-network
    command: >
      sh -c "
      npm start
      "

networks:
  zapcomm-network:
    driver: bridge
  

volumes:
  db_data:
  redis_data:
